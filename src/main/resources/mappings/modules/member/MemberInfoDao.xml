<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.member.dao.MemberInfoDao">
    
	<sql id="memberInfoColumns">
		a.id AS "id",
		a.referee AS "referee",
		a.referee_id AS "refereeId",
		a.balance AS "balance",
		a.avatar AS "avatar",
		a.create_date AS "createDate",
		a.update_date AS "updateDate",
		a.register_way AS "registerWay",
		a.update_by AS "updateBy.id",
		a.create_by AS "createBy.id",
		a.del_flag AS "delFlag",
		a.nickname AS "nickname",
		a.sex AS "sex",
		a.status AS "status",
		a.remarks AS "remarks",
		a.public_account as "publicAccount",
		a.public_account_name as "publicAccountName",
		a.public_account_bank as "publicAccountBank",
		a.business_license_image as "businessLicenseImage",
		a.product_license as "productLicense",
		a.company_name as "companyName",
		a.commission as "commission",
		u.mobile AS "mobile",
		u.user_type AS "userType",
		u.login_flag AS "loginFlag",
		a.operator_code AS "operatorCode",
		u1.name AS "operatorName",
		a.openid AS "openid",
		a.unionid AS "unionid",
		a.wechat_nickname AS "wechatNickname",
		a.headimgurl AS "headimgurl",
		a.merchant_referee_id AS "merchantRefereeId",
		a.merchant_Head_Img as "merchantHeadImg",
		a.merchant_Service_Phone as "merchantServicePhone",
		a.person_account as "personAccount",
		a.person_account_name as "personAccountName",
		a.person_account_bank as "personAccountBank",
		a.merchant_type as "merchantType",
		a.idcard_front as "idcardFront",
		a.idcard_back as "idcardBack",
		a.special_qualification as "specialQualification"
	</sql>
	
	<sql id="memberInfoJoins">
		left join sys_user u on u.id = a.id
		left join sys_user u1 on u1.id = a.operator_code
	</sql>
    
	<select id="get" resultType="MemberInfo">
		SELECT 
			<include refid="memberInfoColumns"/>
		FROM member_info a
		<include refid="memberInfoJoins"/>
		<where>
			<if test="id != null and id != ''">
				and a.id = #{id}
			</if>
			<if test="referee != null and referee != ''">
				and (a.referee = #{referee} or u.login_name = #{referee})
			</if>
			<if test="mobile != null and mobile != ''">
				and u.login_name = #{mobile}
			</if>
		</where>
	</select>
	
	<select id="getPayPassword" resultType="string" parameterType="string">
		select pay_password from member_info where id = #{id}
	</select>

	<update id="savePayPassword">
		update member_info set pay_password = #{payPassword} where id = #{id}
	</update>
	
	<select id="findList" resultType="MemberInfo">
		SELECT 
			<include refid="memberInfoColumns"/>,
		    m.nickname AS "refereeName"
		FROM member_info a
		<include refid="memberInfoJoins"/>
		left join member_info m on m.id = a.referee_id
		<where>
		     <if test="refereeId != null and refereeId != ''">
				 and a.referee_id = #{refereeId}
			 </if>
		     <if test="nickname != null and nickname != ''">
				 and a.nickname  LIKE CONCAT('%',#{nickname},'%')
			 </if>
			 <if test="status != null and status != ''">
				 and a.status = #{status}
			 </if>
		     <if test="registerWay != null and registerWay != ''">
				 and a.register_way = #{registerWay}
			 </if>
			<if test="mobile != null and mobile != ''">
				and u.login_name = #{mobile}
			</if>
			<if test="operatorCode != null and operatorCode != ''">
				and a.operator_code = #{operatorCode}
			</if>
			<if test="userType != null and userType != ''">
				and u.user_type = #{userType}
			</if>
			<if test="merchantRefereeId != null and merchantRefereeId != ''">
				and a.merchant_referee_id = #{merchantRefereeId}
			</if>
			<if test="startDate != null">
				and a.create_date &gt;= #{startDate}
			</if>
			<if test="endDate != null">
				and a.create_date &lt;= #{endDate}
			</if>
			and a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MemberInfo">
		SELECT 
			<include refid="memberInfoColumns"/>
		FROM member_info a
		<include refid="memberInfoJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>


	<select id="findCollectionList" resultType="MemberInfo" >
		select
			<include refid="memberInfoColumns"/>
		from merchant_collection_info mci
		left join member_info a on mci.merchant_id = a.id
		<include refid="memberInfoJoins"/>
		where mci.user_id = #{id}
	</select>
	
	<insert id="insert">
		INSERT INTO member_info(
			id,
			referee,
			referee_id,
			balance,
			avatar,
			create_date,
			update_date,
			register_way,
			update_by,
			create_by,
			del_flag,
			nickname,
			sex,
		    status,
		    remarks,
			public_account,
			public_account_bank,
			public_account_name,
			business_license_image,
			company_name,
			product_license,
			operator_code,
			merchant_referee_id
		) VALUES (
			#{id},
			#{referee},
			#{refereeId},
			#{balance},
			#{avatar},
			#{createDate},
			#{updateDate},
			#{registerWay},
			#{updateBy.id},
			#{createBy.id},
			#{delFlag},
			#{nickname},
			#{sex},
		    #{status},
		    #{remarks},
		    #{publicAccount},
		    #{publicAccountBank},
		    #{publicAccountName},
		    #{businessLicenseImage},
		    #{companyName},
		    #{productLicense},
		    #{operatorCode},
		    #{merchantRefereeId}
		)
	</insert>
	
	<update id="update">
		UPDATE member_info SET 	
			nickname = #{nickname},
			sex = #{sex}
		WHERE id = #{id}
	</update>

	<update id="updateMerchantData">
		UPDATE member_info SET
			company_name = #{companyName},
			public_account = #{publicAccount},
			public_account_bank = #{publicAccountBank},
			public_account_name = #{publicAccountName},
			business_license_image = #{businessLicenseImage},
			product_license = #{productLicense},
			person_account = #{personAccount},
			person_account_name = #{personAccountName},
			person_account_bank = #{personAccountBank},
			merchant_type = #{merchantType},
			idcard_front = #{idcardFront},
			idcard_back = #{idcardBack},
			special_qualification = #{specialQualification},
			status = #{status}
		WHERE id = #{id}
	</update>

	<update id="uncheckStatus">
		update member_info set status = '0' where id = #{id}
	</update>

	<update id="memberCheck">
		update member_info set status = #{status} where id = #{id}
	</update>

	<update id="modifyMemberOperator">
		update member_info set operator_code = #{operatorCode} where id = #{id}
	</update>
	
	<update id="delete">
		UPDATE member_info SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<update id="bindWechat">
		update member_info set openid = #{openid}, unionid = #{unionid}, headimgurl = #{headimgurl}, wechat_nickname = #{wechatNickname} where id = #{id}
	</update>

	<update id="modifyAvatar">
		update member_info set avatar = #{avatar} where id = #{id}
	</update>

	<update id="modifyMerchantRefereeId">
		update member_info set merchant_referee_id = #{merchantRefereeId} where id = #{id} and merchant_referee_id is null
	</update>
	
</mapper>