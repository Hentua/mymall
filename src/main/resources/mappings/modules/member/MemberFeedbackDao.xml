<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.member.dao.MemberFeedbackDao">
    
	<sql id="memberFeedbackColumns">
		a.id AS "id",
		a.customer_code AS "customerCode",
		a.feedback_detail AS "feedbackDetail",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		m.nickname AS "customerName"
	</sql>
	
	<sql id="memberFeedbackJoins">
		left join member_info m on m.id = a.customer_code
	</sql>
    
	<select id="get" resultType="MemberFeedback">
		SELECT 
			<include refid="memberFeedbackColumns"/>
		FROM member_feedback a
		<include refid="memberFeedbackJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="MemberFeedback">
		SELECT 
			<include refid="memberFeedbackColumns"/>
		FROM member_feedback a
		<include refid="memberFeedbackJoins"/>
		<where>
			
			<if test="customerName != null and customerName != ''">
				AND m.customer_name like concat('%',#{shopid},'%')
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="MemberFeedback">
		SELECT 
			<include refid="memberFeedbackColumns"/>
		FROM member_feedback a
		<include refid="memberFeedbackJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO member_feedback(
			id,
			customer_code,
			feedback_detail,
			create_by,
			create_date,
			update_by,
			update_date
		) VALUES (
			#{id},
			#{customerCode},
			#{feedbackDetail},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate}
		)
	</insert>
	
	<update id="update">
		UPDATE member_feedback SET 	
			customer_code = #{customerCode},
			feedback_detail = #{feedbackDetail},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM member_feedback
		WHERE id = #{id}
	</update>
	
</mapper>