<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.gift.dao.GiftTransferLogDao">
    
	<sql id="giftTransferLogColumns">
		a.id AS "id",
		a.merchant_code AS "merchantCode",
		a.customer_code AS "customerCode",
		a.gift_category AS "giftCategory",
		a.gift_count AS "giftCount",
		a.create_date AS "createDate",
		a.create_by AS "createBy.id",
		a.update_date AS "updateDate",
		a.update_by AS "updateBy.id",
		a.remarks AS "remarks",
		a.gift_merchant_code AS "giftMerchantCode",
		a.gift_customer_code AS "giftCustomerCode",
		c.category_name AS "giftConfigCategoryName",
		m.nickname AS "customerName",
		s.mobile AS "customerMobile",
		s.login_name AS "customerAccount",
		sm.login_name AS "merchantAccount",
		m.referee AS "customerId",
		mm.nickname AS "merchantName",
		mm.referee AS "merchantId",
		c.gift_price AS "giftPrice",
		gc.gift_count AS "status"
	</sql>
	
	<sql id="giftTransferLogJoins">
		left join member_info m on m.id = a.customer_code
		left join member_info mm on mm.id = a.merchant_code
		left join gift_config_category c on c.id = a.gift_category
		left join sys_user s on s.id = a.customer_code
		left join sys_user sm on sm.id = a.merchant_code
		left join gift_customer gc on gc.id = a.gift_customer_code
	</sql>
    
	<select id="get" resultType="GiftTransferLog">
		SELECT 
			<include refid="giftTransferLogColumns"/>
		FROM gift_transfer_log a
		<include refid="giftTransferLogJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="GiftTransferLog">
		SELECT 
			<include refid="giftTransferLogColumns"/>
		FROM gift_transfer_log a
		<include refid="giftTransferLogJoins"/>
		left join sys_user uo on uo.id = m.operator_code
		left join sys_office uoo on uoo.id = uo.office_id
		<where>
			<if test="merchantCode != null and merchantCode != ''">
				and a.merchant_code = #{merchantCode}
			</if>
			<if test="giftConfigCategoryName != null and giftConfigCategoryName != ''">
				and c.category_name like concat('%',#{giftConfigCategoryName},'%')
			</if>
			<if test="beginCreateDate != null and beginCreateDate != ''">
				AND a.create_date &gt;= #{beginCreateDate}
			</if>
			<if test="endCreateDate != null and endCreateDate != ''">
				AND a.create_date &lt;= #{endCreateDate}
			</if>
			<if test="customerId != null and customerId != ''">
				AND m.referee = #{customerId}
			</if>
			<if test="merchantId != null and merchantId != ''">
				AND mm.referee = #{merchantId}
			</if>
			<if test="customerAccount != null and customerAccount != ''">
				AND s.login_name = #{customerAccount}
			</if>
			<if test="merchantAccount != null and merchantAccount != ''">
				AND sm.login_name = #{merchantAccount}
			</if>
			<if test="status != null and status != ''">
				AND gc.gift_count = #{status}
			</if>
			<!-- 数据范围过滤 -->
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="GiftTransferLog">
		SELECT 
			<include refid="giftTransferLogColumns"/>
		FROM gift_transfer_log a
		<include refid="giftTransferLogJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO gift_transfer_log(
			id,
			merchant_code,
			customer_code,
			gift_category,
			gift_count,
			create_date,
			create_by,
			update_date,
			update_by,
			remarks,
			gift_merchant_code,
			gift_customer_code
		) VALUES (
			#{id},
			#{merchantCode},
			#{customerCode},
			#{giftCategory},
			#{giftCount},
			#{createDate},
			#{createBy.id},
			#{updateDate},
			#{updateBy.id},
			#{remarks},
			#{giftMerchantCode},
			#{giftCustomerCode}
		)
	</insert>
	
	<update id="update">
		UPDATE gift_transfer_log SET 	
			merchant_code = #{merchantCode},
			customer_code = #{customerCode},
			gift_category = #{giftCategory},
			gift_count = #{giftCount},
			update_date = #{updateDate},
			update_by = #{updateBy.id},
			remarks = #{remarks},
			gift_merchant_code = #{giftMerchantCode},
			gift_customer_code = #{giftCustomerCode}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM gift_transfer_log
		WHERE id = #{id}
	</update>
	
</mapper>