<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.gift.dao.GiftCustomerDao">
    
	<sql id="giftCustomerColumns">
		a.id AS "id",
		a.gift_merchant_id AS "giftMerchantId",
		a.gift_name AS "giftName",
		a.original_price AS "originalPrice",
		a.gift_price AS "giftPrice",
		a.goods_count AS "goodsCount",
		a.merchant_code AS "merchantCode",
		a.customer_code AS "customerCode",
		a.gift_count AS "giftCount",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.del_flag AS "delFlag",
		a.remarks AS "remarks"
	</sql>
	
	<sql id="giftCustomerJoins">
	</sql>
    
	<select id="get" resultType="GiftCustomer">
		SELECT 
			<include refid="giftCustomerColumns"/>
		FROM gift_customer a
		<include refid="giftCustomerJoins"/>
		WHERE a.id = #{id}
	</select>

	<select id="enabledGiftCount" resultType="Map">
		select IFNULL(sum(gift_count),0) as "enabledGiftCount" from gift_customer where customer_code = #{customerCode}
	</select>
	
	<select id="findList" resultType="GiftCustomer">
		SELECT 
			<include refid="giftCustomerColumns"/>
		FROM gift_customer a
		<include refid="giftCustomerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="customerCode != null and customerCode != ''">
				AND a.customer_code = #{customerCode}
			</if>
			and a.gift_count &gt; 0
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="GiftCustomer">
		SELECT 
			<include refid="giftCustomerColumns"/>
		FROM gift_customer a
		<include refid="giftCustomerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO gift_customer(
			id,
			gift_merchant_id,
			gift_name,
			original_price,
			gift_price,
			goods_count,
			merchant_code,
			customer_code,
			gift_count,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag,
			remarks
		) VALUES (
			#{id},
			#{giftMerchantId},
			#{giftName},
			#{originalPrice},
			#{giftPrice},
			#{goodsCount},
			#{merchantCode},
			#{customerCode},
			#{giftCount},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag},
			#{remarks}
		)
	</insert>
	
	<update id="update">
		UPDATE gift_customer SET 	
			gift_merchant_id = #{giftMerchantId},
			gift_name = #{giftName},
			original_price = #{originalPrice},
			gift_price = #{giftPrice},
			goods_count = #{goodsCount},
			merchant_code = #{merchantCode},
			customer_code = #{customerCode},
			gift_count = #{giftCount},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE gift_customer SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>