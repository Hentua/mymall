<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.commission.dao.CommissionInfoDao">
    
	<sql id="commissionInfoColumns">
		a.id AS "id",
		a.type AS "type",
		a.user_id AS "userId",
		a.produce_user_id AS "produceUserId",
		a.origin_amount AS "originAmount",
		a.amount AS "amount",
		a.union_id AS "unionId",
		a.settlement_id AS "settlementId",
		a.create_date AS "createDate",
		mpu.nickname as "produceUserName",
		a.status as "status",
		u.mobile as "userMobile",
		mu.nickname as "userName",
		a.mode AS "mode",
		a.number AS "number",
		pu.mobile as "produceUserMobile",
		a.bank_account as "bankAccount",
		a.bank_account_name as "bankAccountName",
		a.bank_name as "bankName",
		a.check_status as "checkStatus",
		a.check_remark as "checkRemark"
	</sql>
	
	<sql id="commissionInfoJoins">
		left join member_info mpu on mpu.id = a.produce_user_id
		left join member_info mu on mu.id = a.user_id
		left join sys_user u on u.id = a.user_id
		left join sys_user pu on pu.id = a.produce_user_id
	</sql>
    
	<select id="get" resultType="CommissionInfo">
		SELECT 
			<include refid="commissionInfoColumns"/>
		FROM commission_info a
		<include refid="commissionInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="CommissionInfo">
		SELECT 
			<include refid="commissionInfoColumns"/>
		FROM commission_info a
		<include refid="commissionInfoJoins"/>
		<where>
			<if test="unionId != null and unionId != ''">
				and a.union_id = #{unionId}
			</if>
			<if test="userId != null and userId != ''">
				and a.user_id = #{userId}
			</if>
			<if test="status != null and  status != ''">
				and a.status = #{status}
			</if>
			<if test="type != null and  type != ''">
				and a.type = #{type}
			</if>
			<if test="userMobile != null and userMobile != ''">
				and u.mobile = #{userMobile}
			</if>
			<if test="bankAccount != null and bankAccount != ''">
				AND a.bank_account = #{bankAccount}
			</if>
			<if test="bankAccountName != null and bankAccountName != ''">
				AND a.bank_account_name = #{bankAccountName}
			</if>
			<if test="bankName != null and bankName != ''">
				AND a.bank_name = #{bankName}
			</if>
			<if test="checkStatus != null and checkStatus != ''">
				AND a.check_status = #{checkStatus}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date desc
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="CommissionInfo">
		SELECT 
			<include refid="commissionInfoColumns"/>
		FROM commission_info a
		<include refid="commissionInfoJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</select>


	<select id="merchantIndexSts" resultType="java.util.Map" parameterType="java.lang.String">
		SELECT
			ROUND(ifnull(
			(
		SELECT
			sum( o.order_amount_total )
		FROM
			order_info o
		WHERE
			o.merchant_code = #{userId}
			AND DATE_FORMAT( o.create_date, '%Y-%m-%d' ) = DATE_FORMAT( now( ), '%Y-%m-%d' )
			),
			0
			),2) AS "dayOrderAmountTotal",
			ROUND(ifnull(
			(
		SELECT
			sum( o.order_amount_total )
		FROM
			order_info o
		WHERE
			o.merchant_code = #{userId}
			AND DATE_FORMAT( o.create_date, '%Y-%m' ) = DATE_FORMAT( now( ), '%Y-%m' )
			),
			0
			),2) AS "monthOrderAmountTotal",
			ROUND(ifnull( ( SELECT sum( a.amount ) FROM commission_info a WHERE a.user_id = #{userId} and a.type != 6 and a.type != 7 ), 0 ),2) AS "commissionTotal"
	</select>
	
	<insert id="insert">
		INSERT INTO commission_info(
			id,
			type,
			user_id,
			produce_user_id,
			origin_amount,
			amount,
			mode,
			number,
			union_id,
			settlement_id,
			create_date,
			status,
			bank_account,
			bank_account_name,
			bank_name,
			check_status,
			check_remark
		) VALUES (
			#{id},
			#{type},
			#{userId},
			#{produceUserId},
			#{originAmount},
			#{amount},
			#{mode},
			#{number},
			#{unionId},
			#{settlementId},
			#{createDate},
			#{status},
			#{bankAccount},
			#{bankAccountName},
			#{bankName},
			#{checkStatus},
			#{checkRemark}
		)
	</insert>
	
	<update id="update">
		UPDATE commission_info SET 	
			type = #{type},
			user_id = #{userId},
			produce_user_id = #{produceUserId},
			origin_amount = #{originAmount},
			amount = #{amount},
			union_id = #{unionId},
			settlement_id = #{settlementId},
			bank_account = #{bankAccount},
			bank_account_name = #{bankAccountName},
			bank_name = #{bankName},
			check_status = #{checkStatus},
			check_remark = #{checkRemark}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM commission_info
		WHERE id = #{id}
	</update>

	<update id="editStatus" parameterType="java.lang.String">
		UPDATE commission_info SET status = '1' where id = #{id}
	</update>

	<update id="editOrderStatus" parameterType="java.lang.String">
		UPDATE order_info SET set_flag = '1' where id = #{orderId}
	</update>

	<update id="accumulation" >
		update member_info set commission = commission+(select amount from commission_info where id = #{id})
		where id = #{userId}
	</update>
	
</mapper>