<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.order.dao.OrderReturnsDao">
    
	<sql id="orderReturnsColumns">
		a.id AS "id",
		a.returns_no AS "returnsNo",
		a.order_no AS "orderNo",
		a.express_no AS "expressNo",
		a.consignee_realname AS "consigneeRealname",
		a.consignee_telphone AS "consigneeTelphone",
		a.consignee_address AS "consigneeAddress",
		a.consignee_zip AS "consigneeZip",
		a.logistics_type AS "logisticsType",
		a.returns_type AS "returnsType",
		a.handling_way AS "handlingWay",
		a.returns_amount AS "returnsAmount",
		a.return_submit_time AS "returnSubmitTime",
		a.handling_time AS "handlingTime",
		a.status AS "status",
		a.reason AS "reason",
		a.reply AS "reply",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.customer_code AS "customerCode",
		a.order_id AS "orderId",
		u.name AS "customerName",
		u.login_name AS "customerMobile",
		a.check_time AS "checkTime",
		a.platform_reply AS "platformReply",
		m.merchant_service_phone AS "merchantServicePhone",
		a.complete_date AS "completeDate",
		m.nickname AS "merchantName",
		um.login_name AS "merchantAccount",
		o.merchant_code AS "merchantCode"
	</sql>
	
	<sql id="orderReturnsJoins">
		left join sys_user u on u.id = a.customer_code
		left join order_info o on o.id = a.order_id
		left join member_info m on m.id = o.merchant_code
		left join sys_user um on um.id = o.merchant_code
	</sql>
    
	<select id="get" resultType="OrderReturns">
		SELECT 
			<include refid="orderReturnsColumns"/>
		FROM order_returns a
		<include refid="orderReturnsJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="OrderReturns">
		SELECT 
			<include refid="orderReturnsColumns"/>
			left join sys_user uo on uo.id = m.operator_code
			left join sys_office uoo on uoo.id = uo.office_id
		FROM order_returns a
		<include refid="orderReturnsJoins"/>
		<where>
			
			<if test="returnsNo != null and returnsNo != ''">
				AND a.returns_no = #{returnsNo}
			</if>
			<if test="orderNo != null and orderNo != ''">
				AND a.order_no = #{orderNo}
			</if>
			<if test="expressNo != null and expressNo != ''">
				AND a.express_no = #{expressNo}
			</if>
			<if test="returnsType != null and returnsType != ''">
				AND a.returns_type = #{returnsType}
			</if>
			<if test="handlingWay != null and handlingWay != ''">
				AND a.handling_way = #{handlingWay}
			</if>
			<if test="returnSubmitTime != null and returnSubmitTime != ''">
				AND a.return_submit_time = #{returnSubmitTime}
			</if>
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="orderId != null and orderId != ''">
				AND a.order_id = #{orderId}
			</if>
			<if test="customerCode != null and customerCode != ''">
				AND a.customer_code = #{customerCode}
			</if>
			<if test="merchantCode != null and merchantCode != ''">
				AND o.merchant_code = #{merchantCode}
			</if>
			<if test="merchantAccount != null and merchantAccount != ''">
				AND um.login_name = #{merchantAccount}
			</if>
			<if test="customerMobile != null and customerMobile != ''">
				and u.login_name = #{customerMobile}
			</if>
			<!-- 数据范围过滤 -->
			${sqlMap.dsf}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="OrderReturns">
		SELECT 
			<include refid="orderReturnsColumns"/>
		FROM order_returns a
		<include refid="orderReturnsJoins"/>
		<where>
			
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO order_returns(
			id,
			returns_no,
			order_no,
			express_no,
			consignee_realname,
			consignee_telphone,
			consignee_address,
			consignee_zip,
			logistics_type,
			returns_type,
			handling_way,
			returns_amount,
			return_submit_time,
			handling_time,
			status,
			reason,
			reply,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			customer_code,
			order_id,
			platform_reply,
			complete_date
		) VALUES (
			#{id},
			#{returnsNo},
			#{orderNo},
			#{expressNo},
			#{consigneeRealname},
			#{consigneeTelphone},
			#{consigneeAddress},
			#{consigneeZip},
			#{logisticsType},
			#{returnsType},
			#{handlingWay},
			#{returnsAmount},
			#{returnSubmitTime},
			#{handlingTime},
			#{status},
			#{reason},
			#{reply},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{customerCode},
			#{orderId},
			#{platformReply},
			#{completeDate}
		)
	</insert>
	
	<update id="update">
		UPDATE order_returns SET 	
			returns_no = #{returnsNo},
			order_no = #{orderNo},
			express_no = #{expressNo},
			consignee_realname = #{consigneeRealname},
			consignee_telphone = #{consigneeTelphone},
			consignee_address = #{consigneeAddress},
			consignee_zip = #{consigneeZip},
			logistics_type = #{logisticsType},
			returns_type = #{returnsType},
			handling_way = #{handlingWay},
			returns_amount = #{returnsAmount},
			return_submit_time = #{returnSubmitTime},
			handling_time = #{handlingTime},
			status = #{status},
			reason = #{reason},
			reply = #{reply},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			customer_code = #{customerCode}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		DELETE FROM order_returns
		WHERE id = #{id}
	</update>

	<update id="check" parameterType="OrderReturns">
		update order_returns set status=#{status},check_time=now(),reply=#{reply} where id=#{id}
	</update>

	<update id="handle" parameterType="OrderReturns">
		update order_returns set status=#{status},handling_time=now(),logistics_type=#{logisticsType},express_no=#{expressNo} where id=#{id}
	</update>

	<update id="complete" parameterType="OrderReturns">
		update order_returns set complete_date=now(),status='3' where id=#{id}
	</update>
	
</mapper>