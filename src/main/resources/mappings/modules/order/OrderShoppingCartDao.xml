<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mall.modules.order.dao.OrderShoppingCartDao">

    <sql id="orderShoppingCartColumns">
        a.id
        AS
        "id",
        a.merchant_code
        AS
        "merchantCode",
        a.goods_id
        AS
        "goodsId",
        a.customer_code
        AS
        "customerCode",
        a.goods_count
        AS
        "goodsCount",
        a.create_date
        AS
        "createDate",
        s.price
        AS
        "goodsPrice",
        a.goods_standard
        AS
        "goodsStandard",
        s.settlements_amount
        AS
        "settlementsAmount",
        a.goods_recommend_id
        AS
        "goodsRecommendId",
        a.create_by
        AS
        "createBy.id",
        a.update_date
        AS
        "updateDate",
        a.update_by
        AS
        "updateBy.id",
        a.remarks
        AS
        "remarks",
        s.name as "goodsStandardName"
    </sql>

    <resultMap id="ShoppingCartDetail" type="com.mall.modules.order.entity.OrderShoppingCartVo">
        <result property="merchantCode" column="merchantCode"/>
        <result property="merchantName" column="merchantName"/>
        <collection property="orderShoppingCarts" ofType="OrderShoppingCart">
            <id property="id" column="orderShoppingCarts.id"/>
            <result property="merchantCode" column="orderShoppingCarts.merchantCode"/>
            <result property="goodsId" column="orderShoppingCarts.goodsId"/>
            <result property="customerCode" column="orderShoppingCarts.customerCode"/>
            <result property="goodsCount" column="orderShoppingCarts.goodsCount"/>
            <result property="goodsPrice" column="orderShoppingCarts.goodsPrice"/>
            <result property="goodsName" column="orderShoppingCarts.goodsName"/>
            <result property="image" column="orderShoppingCarts.image"/>
            <result property="unit" column="orderShoppingCarts.unit"/>

            <result property="goodsStandard" column="orderShoppingCarts.goodsStandard"/>
            <result property="goodsStandardName" column="orderShoppingCarts.goodsStandardName"/>
            <result property="settlementsAmount" column="orderShoppingCarts.settlementsAmount"/>
        </collection>
    </resultMap>

    <sql id="orderShoppingCartJoins">
      left join goods_standard s on s.id = a.goods_standard
    </sql>

    <select id="get" resultType="OrderShoppingCart">
        SELECT
        <include refid="orderShoppingCartColumns"/>
        FROM order_shopping_cart a
        <include refid="orderShoppingCartJoins"/>
        WHERE a.id = #{id}
    </select>


    <select id="getByCondition" resultType="OrderShoppingCart" parameterType="OrderShoppingCart">
        SELECT
        <include refid="orderShoppingCartColumns"/>
        FROM order_shopping_cart a
        <include refid="orderShoppingCartJoins"/>
        <where>
            <if test="customerCode != null and customerCode != ''">
                and a.customer_code = #{customerCode}
            </if>
            <if test="goodsId != null and goodsId != ''">
                and a.goods_id = #{goodsId}
            </if>
            <if test="goodsStandard != null and goodsStandard != ''">
                and a.goods_standard = #{goodsStandard}
            </if>
        </where>
    </select>

    <select id="findShoppingCartDetailList" resultMap="ShoppingCartDetail">
        select a.merchant_code as "merchantCode",
               a.id           as "orderShoppingCarts.id",
               a.goods_id      as "orderShoppingCarts.goodsId",
               a.customer_code as "orderShoppingCarts.customerCode",
               a.goods_count   as "orderShoppingCarts.goodsCount",
               m.nickname     as "merchantName",
               g.goods_name   as "orderShoppingCarts.goodsName",
               s.price  as "orderShoppingCarts.goodsPrice",
               g.image        as "orderShoppingCarts.image",
               g.unit         as "orderShoppingCarts.unit",
               s.name as "orderShoppingCarts.goodsStandardName",
               s.id as "orderShoppingCarts.goodsStandard",
               s.settlements_amount as "orderShoppingCarts.settlementsAmount"
        from order_shopping_cart a
                 left join goods_info g on g.id = a.goods_id
                 left join member_info m on m.id = g.merchant_id
                 left join goods_standard s on s.id = a.goods_standard
        where a.customer_code = #{customerCode}
    </select>

    <select id="findList" resultType="OrderShoppingCart">
        SELECT
        <include refid="orderShoppingCartColumns"/>
        FROM order_shopping_cart a
        <include refid="orderShoppingCartJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <select id="findAllList" resultType="OrderShoppingCart">
        SELECT
        <include refid="orderShoppingCartColumns"/>
        FROM order_shopping_cart a
        <include refid="orderShoppingCartJoins"/>
        <where>

        </where>
        <choose>
            <when test="page !=null and page.orderBy != null and page.orderBy != ''">
                ORDER BY ${page.orderBy}
            </when>
            <otherwise>
                ORDER BY a.update_date DESC
            </otherwise>
        </choose>
    </select>

    <insert id="insert">
        INSERT INTO order_shopping_cart(
                                        id,
                                        merchant_code,
                                        goods_id,
                                        customer_code,
                                        goods_count,
                                        create_date,
                                        create_by,
                                        update_date,
                                        update_by,
                                        remarks,
                                        goods_standard,
                                        goods_recommend_id
            )
        VALUES (
                #{id},
                #{merchantCode},
                #{goodsId},
                #{customerCode},
                #{goodsCount},
                #{createDate},
                #{createBy.id},
                #{updateDate},
                #{updateBy.id},
                #{remarks},
                #{goodsStandard},
                #{goodsRecommendId}
                   )
    </insert>

    <update id="update">
        UPDATE order_shopping_cart
        SET
            goods_count = #{goodsCount}
        WHERE id = #{id}
    </update>

    <update id="delete">
        DELETE
        FROM order_shopping_cart
        WHERE id = #{id}
    </update>

</mapper>